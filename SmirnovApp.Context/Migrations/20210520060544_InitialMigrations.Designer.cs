// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmirnovApp.Context;

namespace SmirnovApp.Context.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210520060544_InitialMigrations")]
    partial class InitialMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ClientId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId1")
                        .HasColumnType("int");

                    b.Property<int?>("EstateId1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceId1")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId1");

                    b.HasIndex("EmployeeId1");

                    b.HasIndex("EstateId1");

                    b.HasIndex("ServiceId1");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Estate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int>("FloorsCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId1")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId1");

                    b.HasIndex("TypeId");

                    b.ToTable("Estates");
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.EstateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstateTypes");
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Client", b =>
                {
                    b.HasBaseType("SmirnovApp.Model.DbContext.Person");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Employee", b =>
                {
                    b.HasBaseType("SmirnovApp.Model.DbContext.Person");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PositionId1")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasIndex("PositionId1");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Owner", b =>
                {
                    b.HasBaseType("SmirnovApp.Model.DbContext.Person");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Contract", b =>
                {
                    b.HasOne("SmirnovApp.Model.DbContext.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId1");

                    b.HasOne("SmirnovApp.Model.DbContext.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId1");

                    b.HasOne("SmirnovApp.Model.DbContext.Estate", "Estate")
                        .WithMany()
                        .HasForeignKey("EstateId1");

                    b.HasOne("SmirnovApp.Model.DbContext.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId1");

                    b.Navigation("Client");

                    b.Navigation("Employee");

                    b.Navigation("Estate");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Estate", b =>
                {
                    b.HasOne("SmirnovApp.Model.DbContext.Owner", "Owner")
                        .WithMany("Estates")
                        .HasForeignKey("OwnerId1");

                    b.HasOne("SmirnovApp.Model.DbContext.EstateType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Owner");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Client", b =>
                {
                    b.HasOne("SmirnovApp.Model.DbContext.Person", null)
                        .WithOne()
                        .HasForeignKey("SmirnovApp.Model.DbContext.Client", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Employee", b =>
                {
                    b.HasOne("SmirnovApp.Model.DbContext.Person", null)
                        .WithOne()
                        .HasForeignKey("SmirnovApp.Model.DbContext.Employee", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("SmirnovApp.Model.DbContext.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId1");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Owner", b =>
                {
                    b.HasOne("SmirnovApp.Model.DbContext.Person", null)
                        .WithOne()
                        .HasForeignKey("SmirnovApp.Model.DbContext.Owner", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmirnovApp.Model.DbContext.Owner", b =>
                {
                    b.Navigation("Estates");
                });
#pragma warning restore 612, 618
        }
    }
}
